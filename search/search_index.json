{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"about/","title":"About","text":""},{"location":"about/#blog","title":"\u70ba\u751a\u9ebc\u6703\u6709\u9019\u500b Blog?","text":"<p>\u7562\u696d\u5f8c\uff0c\u6709\u5e78\u9032\u5165\u4e00\u9593\u4e0d\u932f\u7684\u516c\u53f8\u5b78\u7fd2\u505a Infra \u53ca DevOps \uff0c\u4e00\u8173\u8e0f\u5165 Cloud Native \u7684\u4e16\u754c\uff0c\u4e5f\u767c\u73fe\u53f0\u7063\u6709\u500b Cloud Native Taiwan User Group (CNTUG) \u793e\u7fa4\uff0c\u770b\u5230\u8a31\u591a\u5927\u5927\u5206\u4eab\u5728 Kubernetes \u4e0a\u6240\u9047\u5230\u7684\u554f\u984c\uff0c\u8da3\u4e8b\u7b49\u7b49\uff0c\u6c7a\u5b9a\u4e5f\u4f86\u5beb\u500b Blog \u5206\u4eab\u81ea\u5df1\u6240\u5b78\u7684\u5fc3\u5f97\uff0c\u56de\u994b\u7d66\u793e\u6703\u3002</p>"},{"location":"about/#me","title":"Me","text":"<p>\u53ef\u4ee5\u53eb\u6211 Blocka\u3002</p> <p>\u76ee\u524d\u611f\u8208\u8da3\u7684\u9818\u57df\u6709:</p> <ul> <li>Istio</li> <li>Observability</li> <li>CI / CD</li> </ul>"},{"location":"2024/07/20/leetcode-238---product-of-array-except-self-%E8%A7%A3%E9%A1%8C%E9%81%8E%E7%A8%8B/","title":"Leetcode 238 - Product of Array Except Self \u89e3\u984c\u904e\u7a0b","text":"<p>\u6700\u8fd1\u78b0\u5230\u9019\u984c\uff0c\u89ba\u5f97\u89e3\u984c\u904e\u7a0b\u883b\u6709\u8da3\u7684\u5c31\u4f86\u5206\u4eab\u4e00\u4e0b\u3002</p> <pre><code>Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].\n\nThe product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.\n\nYou must write an algorithm that runs in O(n) time and without using the division operation.\n</code></pre> <p>\u984c\u76ee\u7684\u610f\u601d\u662f\u7d66\u5b9a\u4e00\u500b\u6574\u6578\u6578\u7d44 nums\uff0c\u8fd4\u56de\u4e00\u500b\u6578\u7d44 answer\uff0c\u5176\u4e2d answer[i] \u7b49\u65bc nums \u4e2d\u9664 nums[i] \u4e4b\u5916\u6240\u6709\u5143\u7d20\u7684\u4e58\u7a4d\u3002</p>","tags":["blind75","Array","Prefix Sum"]},{"location":"2024/07/20/leetcode-238---product-of-array-except-self-%E8%A7%A3%E9%A1%8C%E9%81%8E%E7%A8%8B/#_1","title":"\u7bc4\u4f8b","text":"<p>Example 1:</p> <p>Input: nums = [1,2,3,4]</p> <p>Output: [24,12,8,6]</p> <p>Example 2:</p> <p>Input: nums = [-1,1,0,-3,3]</p> <p>Output: [0,0,9,0,0]</p> <p>nums \u6700\u5927\u9577\u5ea6\u70ba10^5\u6b21\u65b9\uff0c\u6240\u4ee5\u5fc5\u9808\u8a2d\u8a08\u4e00\u500bO(n)\u6216\u662fO(nlogn)\u7684\u6642\u9593\u8907\u96dc\u5ea6\u624d\u4e0d\u6703TLE\uff0c\u5c31\u6c92\u8fa6\u6cd5\u4f7f\u7528\u96d9\u5c64\u8ff4\u5708O(n ^ 2)\uff0c\u7576 i = j \u6642\u5c31\u4e0d\u505a\u4e58\u6cd5\u7684\u7c21\u55ae\u4f5c\u6cd5\u3002</p>","tags":["blind75","Array","Prefix Sum"]},{"location":"2024/07/20/leetcode-238---product-of-array-except-self-%E8%A7%A3%E9%A1%8C%E9%81%8E%E7%A8%8B/#_2","title":"\u89e3\u984c","text":"<p>\u90a3\u8a72\u5982\u4f55\u89e3\u9019\u984c\u5462? \u6211\u5011\u53ef\u4ee5\u770b\u5230\u4e0b\u9762\u9019\u5f35\u5716\uff0c\u5229\u7528 Prefix array \u548c Postfix array \u7684\u65b9\u6cd5</p> <p>Prefix array \u7684\u516c\u5f0f\u70ba (Prefix array \u4e00\u958b\u59cb\u90fd\u662f1\uff0c\u7b2c i \u9805\u8981\u4e58\u4e0a nums \u7684\u524d\u4e00\u9805\u548c\u81ea\u5df1\u7684\u524d\u4e00\u9805\uff0c\u6700\u5f8c\u7684\u503c\u4e0d\u9700\u8981\uff0c\u6240\u4ee5\u662f[1,1,2,6])</p> \\[ \\text{prefix_sum}[i] = \\text{prefix_sum}[i-1] * \\text{nums}[i-1] \\quad \\text{for } i = 1, 2, \\ldots, n - 1 \\] <p>Postfix array \u7684\u516c\u5f0f\u70ba (Postfix array \u4e00\u958b\u59cb\u90fd\u662f1\uff0c\u7b2c i \u9805\u8981\u4e58\u4e0anums\u5f8c\u4e00\u9805\u548c\u81ea\u5df1\u7684\u5f8c\u4e00\u9805\uff0c\u6700\u524d\u7684\u503c\u4e0d\u9700\u8981\uff0c\u6240\u4ee5\u662f[24,12,4,1])</p> \\[ \\text{post_sum}[i] = \\text{post_sum}[i+1] * \\text{nums}[i+1] \\quad \\text{for } i = n-2, n-3, \\ldots, 0 \\] <p></p> <p>\u5c0d\u65bc\u7576\u524d\u503c\uff0c\u6211\u5011\u90fd\u53ea\u8981\u628a\u5b83\u7684 Prefix \u4e58\u4e0a Postfix \u5c31\u641e\u5b9a\u4e86</p> <p>Prefix array \u7a0b\u5f0f\u78bc\u5982\u4e0b(\u7167\u8457\u4e0a\u9762\u516c\u5f0f\u5beb\u5c31\u884c\u4e86): <pre><code>int n = nums.size();\nvector&lt;int&gt; PrefixArray(n);\n\nPrefixArray[0] = 1;\nfor(int i = 1;i&lt;nums.size();i++) {\n    PrefixArray[i] = PrefixArray[i - 1] * nums[i - 1];\n}\n\n# PrefixArray: [1,1,2,6]\n</code></pre></p> <p>Postfix array \u7a0b\u5f0f\u78bc\u5982\u4e0b(\u7167\u8457\u4e0a\u9762\u516c\u5f0f\u5beb\u5c31\u884c\u4e86): <pre><code>vector&lt;int&gt; PostfixArray(n);\n\nPostfixArray[n- 1] = 1;\nfor(int i = n - 2;i&gt;=0;i--) {\n    PostfixArray[i] = PostfixArray[i+1] * nums[i+1];\n}\n\n# PostfixArray: [24, 12, 4, 1]\n</code></pre></p> <p>\u6700\u5f8c\u518d\u628a\u5169\u908a\u7684\u503c\u4e58\u8d77\u4f86\u5c31\u641e\u5b9a\u4e86 <pre><code>vector&lt;int&gt; ans(n);\n\nfor(int i=0; i&lt;n; i++){\n    ans[i] = PrefixArray[i] * PostfixArray[i];\n}\n\nreturn ans;\n</code></pre></p> <p>\u5b8c\u6210\u7a0b\u5f0f\u78bc\u5982\u4e0b: <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; productExceptSelf(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        vector&lt;int&gt; PrefixArray(n);\n\n        PrefixArray[0] = 1;\n        for(int i = 1;i&lt;nums.size();i++) {\n            PrefixArray[i] = PrefixArray[i - 1] * nums[i-1];\n        }\n\n        vector&lt;int&gt; PostfixArray(n);\n\n        PostfixArray[n- 1] = 1;\n        for(int i = n - 2;i&gt;=0;i--) {\n            PostfixArray[i] = PostfixArray[i+1] * nums[i+1];\n        }\n\n        vector&lt;int&gt; ans(n);\n\n        for(int i=0; i&lt;n; i++){\n            ans[i] = PrefixArray[i] * PostfixArray[i];\n        }\n\n        return ans;\n    }\n};\n</code></pre></p> <p>\u800c\u5be6\u969b\u7a0b\u5f0f\u78bc\u6211\u5011\u5176\u5be6\u4e0d\u9700\u8981\u9019\u5169\u500b array \u5c31\u53ef\u4ee5\u76f4\u63a5\u9054\u5230\u6211\u5011\u7684\u76ee\u7684\uff0c\u53ef\u4ee5\u7528\u540c\u4e00\u500bvector\u4f86\u7bc0\u7701\u7a7a\u9593\uff0c\u900f\u904e\u4ee5\u4e0b\u7a0b\u5f0f\u78bc\u5f97\u5230 Prefix array:</p> <pre><code>int p = 1;\nfor(int i = 1;i&lt;nums.size();i++) {\n    p = p * nums[i-1];\n    answer[i] = p;\n}\n\n# answer: [1,1,2,6]\n</code></pre> <p>\u518d\u900f\u904e\u4ee5\u4e0b\u7a0b\u5f0f\u78bc\u4e58\u4e0a Postfix <pre><code>p = 1;\n\nfor(int i = nums.size() - 2;i&gt;=0;i--) {\n    p = p * nums[i+1];\n    answer[i] *= p;\n}\n</code></pre></p> <p>\u9019\u984c\u5c31\u7d50\u675f\u645f~</p> <p>\u5b8c\u6574\u7a0b\u5f0f\u78bc\u5982\u4e0b: <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; productExceptSelf(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        vector&lt;int&gt; answer(n, 1);\n\n        int p = 1;\n        for(int i = 1;i&lt;nums.size();i++) {\n            p = p * nums[i-1];\n            answer[i] = p;\n        }\n\n        p = 1;\n\n        for(int i = nums.size() - 2;i&gt;=0;i--) {\n            p = p * nums[i+1];\n            answer[i] *= p;\n        }\n\n        return answer;\n    }\n};\n</code></pre></p>","tags":["blind75","Array","Prefix Sum"]},{"location":"2024/09/13/tsmc-iticsd-infrastructure-engineer-%E9%9D%A2%E8%A9%A6%E5%88%86%E4%BA%AB/","title":"TSMC IT/ICSD Infrastructure Engineer \u9762\u8a66\u5206\u4eab","text":"<p>\u524d\u9663\u5b50\u9762\u4e86\u53f0\u7a4d\u7684IT/ICSD Infrastructure Engineer\uff0c\u4f86\u505a\u500b\u5c0f\u5206\u4eab\u3002</p>"},{"location":"2024/09/13/tsmc-iticsd-infrastructure-engineer-%E9%9D%A2%E8%A9%A6%E5%88%86%E4%BA%AB/#_1","title":"\u6642\u7a0b:","text":"<ul> <li>D+0 - \u4e3b\u7ba1\u9060\u7aef\u9762\u8a66\u9080\u8acb</li> <li>D+7 - \u4e3b\u7ba1\u9762\u8a66</li> <li>D+8 - Hackerrank\u6e2c\u9a57 (\u6e2c\u8cc7: 15/15, 14/15, 10/15)</li> <li>D+10 - HR\u9060\u7aef\u9762\u8a66\u9080\u8acb</li> <li>D+14 - HR\u9060\u7aef\u9762\u8a66</li> <li>D+14 - \u5230\u5ee0\u6e2c\u9a57 (\u9069\u6027\u6e2c\u9a57\u3001\u82f1\u6587\u6e2c\u9a57)</li> <li>D+42 - \u611f\u8b1d\u4fe1</li> </ul> <p>Hackerrank\u500b\u4eba\u9ad4\u611f\u5728EMH\uff0c\u5f37\u70c8\u5efa\u8b70\u5728\u8003\u4e4b\u524d\u8981\u5148\u53bb\u591a\u7df4\u5e7e\u984cHackerrank\uff0c\u719f\u6089\u4e00\u4e0bIDE\u7684\u4f7f\u7528\u4ee5\u53ca\u95b1\u8b80\u984c\u76ee\uff0c\u524d\u5169\u984c\u90fd\u662fArray\u76f8\u95dc\uff0c\u900f\u904eGreedy\u7b97\u6cd5\u53bb\u89e3\uff0c\u800c\u6700\u5f8c\u4e00\u984c\u9700\u8981\u5be6\u969b\u5beb\u4e00\u500bsession-based\u7684\u9a57\u8b49\u7cfb\u7d71\u3002\u500b\u4eba\u89ba\u5f97\u8981\u82b190\u5206\u9418\u5beb\u4e09\u984c\u5176\u5be6\u883b\u56f0\u96e3\u7684\uff0c\u5c24\u5176\u662fHacerrank\u7684\u984c\u76ee\u90fd\u975e\u5e38\u9577\uff0c\u6839\u672c\u5c31\u662f\u5728\u8003\u82f1\u6587\u95b1\u8b80\uff0c\u5bebcode\u5f97\u6642\u9593\u90fd\u6bd4\u8b80\u984c\u76ee\u7684\u6642\u9593\u5c11\u4e86XD\u3002</p>"},{"location":"2024/09/13/tsmc-iticsd-infrastructure-engineer-%E9%9D%A2%E8%A9%A6%E5%88%86%E4%BA%AB/#_2","title":"\u4e3b\u7ba1\u9762\u8a66\u63d0\u554f:","text":"<ul> <li>\u81ea\u6211\u4ecb\u7d39</li> <li>\u76ee\u524d\u7684\u5de5\u4f5c\u5167\u5bb9</li> <li>\u5de5\u4f5c\u7528\u4e86\u54ea\u4e9bTech Stack</li> <li>CI/CD pipeline</li> <li>\u65e5\u5e38\u7dad\u8b77</li> </ul> <p>\u7531\u65bc\u6211\u662f\u5728\u8077\u9762\u8a66\uff0c\u6240\u4ee5\u4e3b\u7ba1\u554f\u4e86\u883b\u591a\u73fe\u516c\u53f8\u7684\u670d\u52d9\u662f\u600e\u9ebc\u53bb\u505a\u7dad\u904b\u7684\uff0c\u4ee5\u53ca\u6574\u9ad4\u7684DevOps pipeline\u662f\u5982\u4f55\u5be6\u73fe\u7684\u3002</p>"},{"location":"2024/09/13/tsmc-iticsd-infrastructure-engineer-%E9%9D%A2%E8%A9%A6%E5%88%86%E4%BA%AB/#hr","title":"HR\u9762\u8a66\u63d0\u554f:","text":"<ul> <li>\u81ea\u6211\u4ecb\u7d39</li> <li>\u8cc7\u6b77\u67e5\u6838</li> <li>\u5c0d on-call \u7684\u63a5\u53d7\u5ea6</li> <li>\u5de5\u4f5c\u4e0a\u6709\u6c92\u6709\u9047\u5230\u54ea\u4e9b\u56f0\u96e3\u548c\u632b\u6298?</li> <li>\u627f\u4e0a\uff0c\u5982\u4f55\u5ea6\u904e\u9019\u4e00\u56f0\u96e3\u3001\u82b1\u4e86\u591a\u5c11\u6642\u9593\u514b\u670d?</li> <li>\u6709\u6c92\u6709\u7121\u6cd5\u8d95\u4e0adeadline\u7684project?</li> </ul>"},{"location":"2024/09/13/tsmc-iticsd-infrastructure-engineer-%E9%9D%A2%E8%A9%A6%E5%88%86%E4%BA%AB/#_3","title":"\u5fc3\u5f97:","text":"<p>\u975e\u5e38\u611f\u8b1d\u5e6b\u6211\u5167\u63a8\u7684\u4eba\uff01\u96d6\u7136\u6700\u5f8c\u672a\u80fd\u9304\u53d6\uff0c\u53ef\u80fd\u662f\u56e0\u70ba\u82f1\u6587\u6e2c\u9a57\u4e0d\u5920\u7406\u60f3 XD\u3002\u4f46\u9019\u6b21\u7684\u9762\u8a66\u4e5f\u5e6b\u6211\u7d2f\u7a4d\u4e86\u4e0d\u5c11\u9762\u8a66\u7d93\u9a57\uff0c\u4e5f\u8b93\u6211\u6709\u66f4\u591a\u52d5\u529b\u7e7c\u7e8c\u63d0\u5347\u81ea\u5df1\u3002</p>"},{"location":"archive/2024/","title":"2024","text":""},{"location":"category/interview-sharing/","title":"Interview sharing","text":""},{"location":"category/leetcode/","title":"LeetCode","text":""}]}